{"version":3,"sources":["../../src/pages/block/block.ts","../../src/pages/confirm-code/confirm-code.ts","../../src/pages/register/register.ts","../../src/pages/enter-mobile/enter-mobile.ts","../../src/pages/login/login.ts","../../src/pages/no-internet/no-internet.ts","../../src/pages/splash/splash.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/WebService/WebService.ts","../../src/pages/home/home.ts","../../src/providers/authentication/authentication.ts","../../src/providers/validator/validator.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AlertController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Generated class for the BlockPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-block',\n  templateUrl: 'block.html',\n})\nexport class BlockPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public alertCtrl: AlertController,public translateService: TranslateService) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad BlockPage');\n    this.showBlockAlert();\n  }\n\n  showBlockAlert(){\n      this.translateService.get('block.blockMsg').subscribe(\n          title => {\n              this.translateService.get('confirm').subscribe(\n                  btn => {\n                      const alert = this.alertCtrl.create({\n                          title: '',\n                          subTitle: title,\n                          buttons: [btn]\n                      });\n                      alert.present();\n                  }\n              )\n          }\n      )\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/block/block.ts","import { Component } from '@angular/core';\nimport {Alert, AlertController, IonicPage, Loading, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport { ValidatorProvider } from '../../providers/validator/validator';\nimport { WebServiceProvider } from \"../../providers/WebService/WebService\";\nimport { AuthenticationProvider } from '../../providers/authentication/authentication';\nimport { Storage } from '@ionic/storage';\nimport { HomePage } from \"../home/home\";\nimport { RegisterPage } from \"../register/register\";\nimport { TranslateService } from '@ngx-translate/core';\n\n\n/**\n * Generated class for the ConfirmCodePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-confirm-code',\n  templateUrl: 'confirm-code.html',\n  viewProviders: [ValidatorProvider,WebServiceProvider,LoadingController,AlertController,AuthenticationProvider]\n\n})\nexport class ConfirmCodePage {\n\n  firstChar : string;\n  secondChar : string;\n  thirdChar : string;\n  fourthChar : string;\n  fifthChar : string;\n  sixthChar : string;\n  phoneNumber : string;\n  smsToken : string;\n  loadingController : Loading;\n  serverFailAlert : Alert;\n  networkFailAlert : Alert;\n  unValidConfirmCode : Alert;\n  wrongConfirmCode : Alert;\n  confirmationCode : string;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public networkManager : WebServiceProvider,\n              public loadingCtrl: LoadingController,public alertController : AlertController,\n              public validator : ValidatorProvider,public authentication : AuthenticationProvider,public storage : Storage,public translateService: TranslateService) {\n    this.smsToken = this.navParams.get('token');\n    this.phoneNumber = this.navParams.get('phoneNumber');\n  }\n\n  ionViewDidLoad() {\n  }\n\n  confirmCode(){\n    this.confirmationCode = this.firstChar + this.secondChar + this.thirdChar ;\n    this.confirmationCode +=  this.fourthChar + this.fifthChar + this.sixthChar;\n    this.confirmationCode = String(this.confirmationCode).replace(/\\s/g, \"\");\n    if (this.validator.validateConfrimCode(this.confirmationCode)){\n\n        let params = {confirm_code : this.confirmationCode,token:this.smsToken};\n        this.networkManager.validateConfirmationCode(params,false,\n            ()=>{\n\n                this.translateService.get('waintingRequest').subscribe(\n                    title => {\n                        this.loadingController = this.loadingCtrl.create({\n                            content: title\n                        });\n                        this.loadingController.present();\n                    }\n                )\n\n\n            },()=>{\n                this.loadingController.dismiss();\n            },(response)=>{\n                console.log(response);\n                if (response['code'] == '200'){\n                    let authenticateResult = this.authentication.authenticateUser(response['data']);\n                    if (authenticateResult){\n                        this.networkManager.loginWithUserID(false,\n                            ()=>{\n                                this.translateService.get('waintingRequest').subscribe(\n                                    loading => {\n                                        this.loadingController = this.loadingCtrl.create({\n                                            content: loading\n                                        });\n                                        this.loadingController.present();\n                                    }\n                                )\n\n                            },()=>{\n                                this.loadingController.dismiss();\n                            },(response)=>{\n                                if(response['code'] == '200'){\n                                    console.log('SID ' , response['session_token']);\n                                    this.storage.set('SID',response['session_token']);\n                                    this.navCtrl.push(HomePage);\n                                }else{\n                                    this.translateService.get('serverError').subscribe(\n                                        title => {\n                                            this.translateService.get('confirm').subscribe(\n                                                btn => {\n                                                    this.serverFailAlert = this.alertController.create({\n                                                        title: '',\n                                                        subTitle: title,\n                                                        buttons: [btn]\n                                                    });\n                                                    this.serverFailAlert.present();\n                                                }\n                                            )\n                                        }\n                                    )\n                                }\n\n                            },()=>{\n\n                                this.translateService.get('networkError').subscribe(\n                                    title => {\n                                        this.translateService.get('confirm').subscribe(\n                                            btn => {\n                                                this.networkFailAlert = this.alertController.create({\n                                                    title: '',\n                                                    subTitle: title,\n                                                    buttons: [btn]\n                                                });\n                                                this.networkFailAlert.present();                                            }\n                                        )\n                                    }\n                                )\n\n                            });\n                    }else{\n                        //Register Screen\n\n                        this.navCtrl.push(RegisterPage,{confirmCode : this.confirmationCode,mobileNumber : this.phoneNumber});\n                    }\n                }else{\n\n                    this.translateService.get('confirmCode.wrongConfirmCode').subscribe(\n                        title => {\n                            this.translateService.get('confirm').subscribe(\n                                btn => {\n                                    this.wrongConfirmCode = this.alertController.create({\n                                        title: '',\n                                        subTitle: 'Wrong Confirm Code',\n                                        buttons: ['Dismiss']\n                                    });\n                                    this.wrongConfirmCode.present();\n                                }\n                            )\n                        }\n                    )\n\n\n                }\n            },()=>{\n                this.translateService.get('networkError').subscribe(\n                    title => {\n                        this.translateService.get('confirm').subscribe(\n                            btn => {\n                                this.networkFailAlert = this.alertController.create({\n                                    title: '',\n                                    subTitle: title,\n                                    buttons: [btn]\n                                });\n                                this.networkFailAlert.present();                                            }\n                        )\n                    }\n                )\n            });\n\n    }else{\n        this.translateService.get('confirmCode.wrongConfirmCode').subscribe(\n            title => {\n                this.translateService.get('confirm').subscribe(\n                    btn => {\n                        this.wrongConfirmCode = this.alertController.create({\n                            title: '',\n                            subTitle: 'Wrong Confirm Code',\n                            buttons: ['Dismiss']\n                        });\n                        this.wrongConfirmCode.present();\n                    }\n                )\n            }\n        )\n    }\n  }\n\n  resendCofirmCode(){\n      let params = {mobile_num:this.phoneNumber};\n      this.networkManager.requestConfirmationCode(params,false,\n          ()=>{\n              this.loadingController = this.loadingCtrl.create({\n                  content: 'Please wait...'\n              });\n              this.loadingController.present();\n          },()=>{\n              this.loadingController.dismiss();\n          },(response)=>{\n              if (response['code'] == \"200\"){\n                  this.navCtrl.push(ConfirmCodePage,{token: response['token'],phoneNumber : this.phoneNumber});\n              }else{\n\n                  this.translateService.get('serverError').subscribe(\n                      title => {\n                          this.translateService.get('confirm').subscribe(\n                              btn => {\n                                  this.serverFailAlert = this.alertController.create({\n                                      title: '',\n                                      subTitle: title,\n                                      buttons: [btn]\n                                  });\n                                  this.serverFailAlert.present();\n                              }\n                          )\n                      }\n                  )\n\n              }\n          },()=>{\n\n              this.translateService.get('networkError').subscribe(\n                  title => {\n                      this.translateService.get('confirm').subscribe(\n                          btn => {\n                              this.networkFailAlert = this.alertController.create({\n                                  title: '',\n                                  subTitle: title,\n                                  buttons: [btn]\n                              });\n                              this.networkFailAlert.present();                                            }\n                      )\n                  }\n              )\n\n          });\n  }\n\n  changePhoneNumber(){\n    this.navCtrl.pop();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/confirm-code/confirm-code.ts","import { Component } from '@angular/core';\nimport {Alert, AlertController, IonicPage, Loading, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport { WebServiceProvider } from \"../../providers/WebService/WebService\";\nimport { Storage } from '@ionic/storage';\nimport { ValidatorProvider } from '../../providers/validator/validator';\nimport {AuthenticationProvider} from \"../../providers/authentication/authentication\";\nimport {ConfirmCodePage} from \"../confirm-code/confirm-code\";\nimport {HomePage} from \"../home/home\";\nimport { TranslateService } from '@ngx-translate/core';\n\n\n\n\n\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n  viewProviders: [ValidatorProvider,WebServiceProvider,LoadingController,AlertController,AuthenticationProvider]\n\n})\nexport class RegisterPage {\n\n  mobileNumber : string;\n  password : string;\n  nickName : string;\n  email : string;\n  fName : string;\n  lName : string;\n  id : string;\n  loadingController : Loading;\n  serverFailAlert : Alert;\n  networkFailAlert : Alert;\n  wrongFieldAlert : Alert;\n  dupicatedIDAlert : Alert;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public webService : WebServiceProvider,\n              public storage : Storage,public loadingCtrl: LoadingController,\n              public alertController : AlertController,\n              public validator : ValidatorProvider,public authentication : AuthenticationProvider,public translateService: TranslateService)\n  {\n    this.mobileNumber = this.navParams.get('mobileNumber');\n    this.password = this.navParams.get('confirmCode');\n    this.id = \"\";\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RegisterPage');\n  }\n\n  regiseterUser(){\n    if(this.validateForm()){\n        let nickName = this.fName + \"  \" +this.lName;\n        let params = {username : this.mobileNumber,password: this.password,nickname : nickName,\n            email : this.email,firstname : this.fName,lastname : this.lName,identity_no : this.id,\n            mobile : this.mobileNumber};\n        this.webService.registerUser(params,false,\n            ()=>{\n                this.loadingController = this.loadingCtrl.create({\n                    content: 'Please wait...'\n                });\n                this.loadingController.present();\n            },()=>{\n                this.loadingController.dismiss();\n            },(response)=>{\n                console.log(response);\n                if (response['code'] == '200'){\n                    let authenticateResult = this.authentication.authenticateUser(response);\n                    if (authenticateResult){\n                        this.webService.loginWithUserID(false,\n                            ()=>{\n                                this.translateService.get('waintingRequest').subscribe(\n                                    loading => {\n                                        this.loadingController = this.loadingCtrl.create({\n                                            content: loading\n                                        });\n                                        this.loadingController.present();\n                                    }\n                                )\n                            },()=>{\n                                this.loadingController.dismiss();\n                            },(response)=>{\n                                if(response['code'] == '200'){\n                                    console.log('SID ' , response['session_token']);\n                                    this.storage.set('SID',response['session_token']);\n                                    this.navCtrl.push(HomePage);\n                                }else{\n                                    this.translateService.get('serverError').subscribe(\n                                        title => {\n                                            this.translateService.get('confirm').subscribe(\n                                                btn => {\n                                                    this.serverFailAlert = this.alertController.create({\n                                                        title: '',\n                                                        subTitle: title,\n                                                        buttons: [btn]\n                                                    });\n                                                    this.serverFailAlert.present();\n                                                }\n                                            )\n                                        }\n                                    )\n                                }\n                            },()=>{\n                                this.translateService.get('networkError').subscribe(\n                                    title => {\n                                        this.translateService.get('confirm').subscribe(\n                                            btn => {\n                                                this.networkFailAlert = this.alertController.create({\n                                                    title: '',\n                                                    subTitle: title,\n                                                    buttons: [btn]\n                                                });\n                                                this.networkFailAlert.present();                                            }\n                                        )\n                                    }\n                                )\n                            });\n                    }else{\n                        this.translateService.get('serverError').subscribe(\n                            title => {\n                                this.translateService.get('confirm').subscribe(\n                                    btn => {\n                                        this.serverFailAlert = this.alertController.create({\n                                            title: '',\n                                            subTitle: title,\n                                            buttons: [btn]\n                                        });\n                                        this.serverFailAlert.present();\n                                    }\n                                )\n                            }\n                        )\n                    }\n\n\n\n                }else if(response['code'] == '305'){\n\n                    this.translateService.get('serverError').subscribe(\n                        title => {\n                            this.translateService.get('register.duplicatedID').subscribe(\n                                btn => {\n                                    this.dupicatedIDAlert = this.alertController.create({\n                                        title: '',\n                                        subTitle: 'Duplicated Identity Number',\n                                        buttons: ['Dismiss']\n                                    });\n                                    this.dupicatedIDAlert.present();\n                                }\n                            )\n                        }\n                    )\n\n\n                }else{\n                    this.translateService.get('serverError').subscribe(\n                        title => {\n                            this.translateService.get('confirm').subscribe(\n                                btn => {\n                                    this.serverFailAlert = this.alertController.create({\n                                        title: '',\n                                        subTitle: title,\n                                        buttons: [btn]\n                                    });\n                                    this.serverFailAlert.present();\n                                }\n                            )\n                        }\n                    )\n                }\n            },()=>{\n                this.translateService.get('networkError').subscribe(\n                    title => {\n                        this.translateService.get('confirm').subscribe(\n                            btn => {\n                                this.networkFailAlert = this.alertController.create({\n                                    title: '',\n                                    subTitle: title,\n                                    buttons: [btn]\n                                });\n                                this.networkFailAlert.present();                                            }\n                        )\n                    }\n                )\n            });\n\n    }\n  }\n\n  validateForm(){\n    if(!this.validator.validateName(this.fName)){\n        this.wrongFieldAlert = this.alertController.create({\n            title: '',\n            subTitle: 'Enter Valid First Name',\n            buttons: ['Dismiss']\n        });\n        this.wrongFieldAlert.present();\n        return false;\n    }if(!this.validator.validateName(this.lName)) {\n          this.wrongFieldAlert = this.alertController.create({\n              title: '',\n              subTitle: 'Enter Valid Last Name',\n              buttons: ['Dismiss']\n          });\n          this.wrongFieldAlert.present();\n          return false;\n      }\n    if(!this.validator.validateMail(this.email)){\n        this.wrongFieldAlert = this.alertController.create({\n            title: '',\n            subTitle: 'Enter Valid Mail',\n            buttons: ['Dismiss']\n        });\n        this.wrongFieldAlert.present();\n      return false;\n    }\n    return true;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","import { Component } from '@angular/core';\nimport {Alert, IonicPage, Loading, NavController, NavParams} from 'ionic-angular';\nimport { ValidatorProvider } from '../../providers/validator/validator';\nimport { WebServiceProvider } from \"../../providers/WebService/WebService\";\nimport { LoadingController} from \"ionic-angular\";\nimport { AlertController } from 'ionic-angular';\nimport { ConfirmCodePage } from \"../confirm-code/confirm-code\";\nimport { TranslateService } from '@ngx-translate/core';\n\n\n/**\n * Generated class for the EnterMobilePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-enter-mobile',\n  templateUrl: 'enter-mobile.html',\n  viewProviders: [ValidatorProvider,WebServiceProvider,LoadingController,AlertController]\n})\nexport class EnterMobilePage {\n\n  phoneNumber : string = \"\";\n  optimizedPhoneNumber : string = \"\";\n  validator : ValidatorProvider;\n  loadingController : Loading;\n  networkManager : WebServiceProvider;\n  alertController : AlertController;\n  serverFailAlert : Alert;\n  networkFailAlert : Alert;\n  unValidPhoneAlert : Alert;\n\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,validator : ValidatorProvider,\n              public loadingCtrl: LoadingController,networkManager : WebServiceProvider,alertController : AlertController,public translateService: TranslateService) {\n    this.validator = validator;\n    this.networkManager = networkManager;\n    this.alertController = alertController;\n\n  }\n\n\n  ionViewDidLoad() {\n\n  }\n\n\n\n  confirmPhoneNumber(){\n\n\n      this.optimizedPhoneNumber = this.phoneNumber;\n      this.optimizedPhoneNumber = this.optimizedPhoneNumber.replace('+','00');\n\n\n    if (this.validator.validatePhoneNumber(this.optimizedPhoneNumber)){\n\n        let params = {mobile_num : this.optimizedPhoneNumber};\n      this.networkManager.requestConfirmationCode(params,false,\n          ()=>{\n\n              this.translateService.get('waintingRequest').subscribe(\n                  title => {\n                      this.loadingController = this.loadingCtrl.create({\n                          content: title\n                      });\n                      this.loadingController.present();\n                  }\n              )\n\n\n      },()=>{\n              this.loadingController.dismiss();\n      },(response)=>{\n          if (response['code'] == \"200\"){\n            this.navCtrl.push(ConfirmCodePage,{token: response['token'],phoneNumber : this.optimizedPhoneNumber});\n          }else{\n              console.log(response['data']);\n              this.translateService.get('serverError').subscribe(\n                  title => {\n                      this.translateService.get('confirm').subscribe(\n                          btn => {\n                              this.serverFailAlert = this.alertController.create({\n                                  title: '',\n                                  subTitle: title,\n                                  buttons: [btn]\n                              });\n                              this.serverFailAlert.present();\n                          }\n                      )\n                  }\n              )\n          }\n          },()=>{\n              this.translateService.get('networkError').subscribe(\n                  title => {\n                      this.translateService.get('confirm').subscribe(\n                          btn => {\n                              this.networkFailAlert = this.alertController.create({\n                                  title: '',\n                                  subTitle: title,\n                                  buttons: [btn]\n                              });\n                              this.networkFailAlert.present();                                            }\n                      )\n                  }\n              )\n        });\n    }else{\n\n        this.translateService.get('enterMobile.wrongPhoneNumber').subscribe(\n            title => {\n                this.translateService.get('confirm').subscribe(\n                    btn => {\n                        this.unValidPhoneAlert = this.alertController.create({\n                            title: '',\n                            subTitle: title,\n                            buttons: [btn]\n                        });\n                        this.unValidPhoneAlert.present();\n                    }\n                )\n            }\n        )\n\n\n\n    }\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/enter-mobile/enter-mobile.ts","import { Component } from '@angular/core';\nimport {Alert, AlertController, IonicPage, Loading, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport {WebServiceProvider} from \"../../providers/WebService/WebService\";\nimport { Storage } from '@ionic/storage';\nimport { HomePage } from \"../home/home\";\nimport { TranslateService } from '@ngx-translate/core';\n\n\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  viewProviders: [WebServiceProvider,LoadingController,AlertController]\n\n})\nexport class LoginPage {\n\n  userName : string;\n  password : string;\n  loadingController : Loading;\n  serverFailAlert : Alert;\n  networkFailAlert : Alert;\n  unValidField : Alert;\n  unValidLoginData : Alert;\n\n    constructor(public navCtrl: NavController, public navParams: NavParams\n                ,public alertController : AlertController,public loadingCtrl : LoadingController\n                ,public storage : Storage,public translateService: TranslateService,public networkManager : WebServiceProvider) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n  validateForm(){\n        if (this.userName == undefined){\n            this.unValidField = this.alertController.create({\n                title: '',\n                subTitle: 'Wrong Phone Number',\n                buttons: ['Dismiss']\n            });\n            this.unValidField.present();\n            return false;\n        }else if(this.password == undefined){\n            this.unValidField = this.alertController.create({\n                title: '',\n                subTitle: 'Wrong Password',\n                buttons: ['Dismiss']\n            });\n            this.unValidField.present();\n          return false;\n        }\n\n        return true;\n  }\n\n  login(){\n      if(this.validateForm()){\n\n          let params = {username:this.userName,password:this.password};\n          this.networkManager.loginWithUserNameAndPasword(params,false,\n              ()=>{\n                  this.translateService.get('waintingRequest').subscribe(\n                      title => {\n                          this.loadingController = this.loadingCtrl.create({\n                              content: title\n                          });\n                          this.loadingController.present();\n                      }\n                  )\n              },()=>{\n                  this.loadingController.dismiss();\n              },(response)=>{\n                  if (response['code'] == '200'){\n                      this.storage.set('userID',response['user_id']);\n                      this.storage.set('SID',response['session_token']);\n                      this.navCtrl.push(HomePage);\n                  }else{\n\n                      this.translateService.get('login.wrongUserNameOrPass').subscribe(\n                          title => {\n                              this.translateService.get('confirm').subscribe(\n                                  btn => {\n                                      this.unValidLoginData = this.alertController.create({\n                                          title: '',\n                                          subTitle: title,\n                                          buttons: [btn]\n                                      });\n                                      this.unValidLoginData.present();                                }\n                              )\n                          }\n                      )\n\n\n                  }\n              },()=>{\n                  this.translateService.get('networkError').subscribe(\n                      title => {\n                          this.translateService.get('confirm').subscribe(\n                              btn => {\n                                  this.networkFailAlert = this.alertController.create({\n                                      title: '',\n                                      subTitle: title,\n                                      buttons: [btn]\n                                  });\n                                  this.networkFailAlert.present();                                            }\n                          )\n                      }\n                  )\n              });\n\n      }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertController } from 'ionic-angular';\n\n\n/**\n * Generated class for the NoInternetPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-no-internet',\n  templateUrl: 'no-internet.html',\n})\nexport class NoInternetPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public alertCtrl: AlertController,public translateService: TranslateService) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad NoInternetPage');\n    this.showNetworkError();\n  }\n\n    showNetworkError(){\n        this.translateService.get('block.blockMsg').subscribe(\n            title => {\n                this.translateService.get('confirm').subscribe(\n                    btn => {\n                        const alert = this.alertCtrl.create({\n                            title: '',\n                            subTitle: title,\n                            buttons: [btn]\n                        });\n                        alert.present();\n                    }\n                )\n            }\n        )\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/no-internet/no-internet.ts","import { Component } from '@angular/core';\nimport {AlertController, IonicPage, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport {EnterMobilePage} from \"../enter-mobile/enter-mobile\";\nimport {BlockPage} from \"../block/block\";\nimport {HomePage} from \"../home/home\";\nimport {LoginPage} from \"../login/login\";\nimport {NoInternetPage} from \"../no-internet/no-internet\";\nimport { Storage } from \"@ionic/storage\";\nimport { WebServiceProvider } from \"../../providers/WebService/WebService\";\nimport { AuthenticationProvider } from \"../../providers/authentication/authentication\";\nimport {ValidatorProvider} from \"../../providers/validator/validator\";\n\n/**\n * Generated class for the SplashPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-splash',\n  templateUrl: 'splash.html',\n  viewProviders: [WebServiceProvider,AuthenticationProvider],\n})\nexport class SplashPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public storage: Storage,\n              public webService : WebServiceProvider,public authentication : AuthenticationProvider) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SplashPage');\n    this.getStartScreen();\n  }\n\n    getStartScreen(){\n        this.storage.get('SID').then((val)=>{\n            console.log('SID' + val);\n            if(val == null){\n                this.navCtrl.push(EnterMobilePage);\n            }else{\n\n                this.webService.isUserLogged(false,()=>{},()=>{},\n                    (response)=>{\n                        let authorizationResult = this.authentication.authorizeUser(response);\n                        console.log(authorizationResult);\n                        if (authorizationResult == -1){\n                            this.navCtrl.push(BlockPage);\n                        }else if(authorizationResult == 0){\n                            this.navCtrl.push(LoginPage);\n                        }else{\n                            this.navCtrl.push(HomePage);\n                        }\n                    },()=>{\n                        this.navCtrl.push(NoInternetPage);\n                    });\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/splash/splash.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 127;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 127\n// module chunks = 7","var map = {\n\t\"../pages/block/block.module\": [\n\t\t308,\n\t\t6\n\t],\n\t\"../pages/confirm-code/confirm-code.module\": [\n\t\t309,\n\t\t5\n\t],\n\t\"../pages/enter-mobile/enter-mobile.module\": [\n\t\t310,\n\t\t4\n\t],\n\t\"../pages/login/login.module\": [\n\t\t311,\n\t\t3\n\t],\n\t\"../pages/no-internet/no-internet.module\": [\n\t\t312,\n\t\t2\n\t],\n\t\"../pages/register/register.module\": [\n\t\t313,\n\t\t1\n\t],\n\t\"../pages/splash/splash.module\": [\n\t\t314,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 173;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 173\n// module chunks = 7","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n\n    this.items = [];\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(ListPage, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient,HttpClientModule } from '@angular/common/http';\nimport { HTTP } from '@ionic-native/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { InternationalPhoneModule } from 'ng4-country-phone-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { UniqueDeviceID } from '@ionic-native/unique-device-id';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\nimport { EnterMobilePage } from '../pages/enter-mobile/enter-mobile';\nimport { ConfirmCodePage } from '../pages/confirm-code/confirm-code';\nimport { RegisterPage } from \"../pages/register/register\";\nimport { LoginPage } from \"../pages/login/login\";\nimport { NoInternetPage } from \"../pages/no-internet/no-internet\";\nimport { BlockPage } from \"../pages/block/block\";\nimport { SplashPage } from \"../pages/splash/splash\";\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { ValidatorProvider } from '../providers/validator/validator';\nimport { WebServiceProvider } from '../providers/WebService/WebService';\nimport { AuthenticationProvider } from '../providers/authentication/authentication';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage,\n    EnterMobilePage,\n    ConfirmCodePage,\n    RegisterPage,\n    LoginPage,\n    NoInternetPage,\n    BlockPage,\n    SplashPage,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n    InternationalPhoneModule ,\n    IonicStorageModule.forRoot(),\n    TranslateModule.forRoot({\n          loader: {\n              provide: TranslateLoader,\n              useFactory: (HttpLoaderFactory),\n              deps: [HttpClient]\n          }\n    }),\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage,\n    EnterMobilePage,\n    ConfirmCodePage,\n    RegisterPage,\n    LoginPage,\n    NoInternetPage,\n    BlockPage,\n    SplashPage,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ValidatorProvider,\n    WebServiceProvider,\n    AuthenticationProvider,\n    UniqueDeviceID,\n    HTTP,\n\n  ]\n})\n\n\nexport class AppModule {}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WebServiceProvider } from \"../providers/WebService/WebService\";\nimport { AuthenticationProvider } from \"../providers/authentication/authentication\";\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\nimport { EnterMobilePage } from '../pages/enter-mobile/enter-mobile';\nimport { Storage } from '@ionic/storage';\nimport { LoginPage } from \"../pages/login/login\";\nimport { NoInternetPage } from \"../pages/no-internet/no-internet\";\nimport { BlockPage } from \"../pages/block/block\";\nimport { SplashPage } from \"../pages/splash/splash\";\nimport {RegisterPage} from \"../pages/register/register\";\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = SplashPage;\n  translate : TranslateService;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen,\n              translate: TranslateService,public storage : Storage,\n              public webService : WebServiceProvider,public authentication : AuthenticationProvider) {\n    this.initializeApp();\n    this.translate = translate;\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'List', component: ListPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.translate.setDefaultLang('en');\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HTTP } from '@ionic-native/http';\nimport { Injectable } from '@angular/core';\nimport { UniqueDeviceID } from '@ionic-native/unique-device-id';\nimport { Storage } from '@ionic/storage';\n\n\n/*\n  Generated class for the NetworkProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class WebServiceProvider {\n\n//        this.postBaseURL = \"https://arabia2web.net/client6.119/program/webservice.php?f=\";\n//        this.getBaseURL = \"https://arabia2web.net/client6.119/program/webservice-get.php?f=\";\n//        this.APIKey = \"_com_229mNi6_22\";\n//        this.APIToken = \"8@*****h^@@B!^^^G@****g@^g\";\n\n    baseURLPost = \"http://192.168.3.16/isteqdam/program/webservice.php?f=\";\n    baseURLGet = \"http://192.168.3.16/isteqdam/program/webservice-get.php?f=\";\n\n\n\n\n    constructor(public http: HTTP,private uniqueDeviceID: UniqueDeviceID,private storage: Storage) {\n    this.http = http;\n  }\n\n  // callFunctionOnWebService(functionName : string,functionParams : any,isGetRequest : boolean,beforeRequest : Function\n  //                          ,afterRequest : Function,onSuccess : Function,onFail : Function,onNetworkFail : Function){\n  //                             this.http.post()\n  //                           }\n\n    private callFunctionOnWebService(functionName : string,functionParams : Object,isGetRequest : Boolean,beforeRequest : Function,\n                             afterRquest : Function,onSuccess : Function,onFail : Function){\n\n      functionParams['_com_i8j3b8n7jj'] = '8!6^5h%g$$G';\n      beforeRequest();\n      console.log(functionParams);\n      if (isGetRequest){\n          this.http.setDataSerializer(\"json\");\n          this.http.get(this.baseURLGet + functionName,functionParams,{}).then(\n              data => {\n                  afterRquest();\n                  var jsonData = JSON.parse(data['data']);\n                  onSuccess(jsonData);\n              },\n              err => {\n                  console.log(err);\n                  afterRquest();\n                  onFail();\n              }\n          );\n      }else{\n          this.http.post(this.baseURLPost + functionName,functionParams,{}).then(\n              data => {\n                  console.log(data);\n                  afterRquest();\n                  var jsonData = JSON.parse(data['data']);\n                  onSuccess(jsonData);\n              },\n              err => {\n                  console.log(err);\n                  afterRquest();\n                  onFail();\n\n              }\n          );\n      }\n  }\n\n  requestConfirmationCode(functionParams : Object,isGetRequest : Boolean,beforeRequest : Function,\n                                     afterRquest,onSuccess : Function,onFail : Function){\n        this.callFunctionOnWebService('send_sms',functionParams,false,beforeRequest,afterRquest,\n            onSuccess,onFail);\n    }\n\n    validateConfirmationCode(functionParams : Object,isGetRequest : Boolean,beforeRequest : Function,\n                            afterRquest,onSuccess : Function,onFail : Function){\n        this.callFunctionOnWebService('checkConfirmation',functionParams,false,beforeRequest,afterRquest,\n            onSuccess,onFail);\n    }\n\n    loginWithUserID(isGetRequest : Boolean,beforeRequest : Function,\n                             afterRquest,onSuccess : Function,onFail : Function) {\n        this.uniqueDeviceID.get()\n            .then((uuid: any) => {\n                this.storage.get('userID').then((val) => {\n                    let functionParams = {device_ip : uuid,user_id:val};\n                    this.callFunctionOnWebService('loginWithUserId',functionParams,false,beforeRequest,afterRquest,\n                        onSuccess,onFail);\n                });\n\n            })\n            .catch((error: any) => {\n                onFail();\n            });\n    }\n\n    registerUser(functionParams : Object,isGetRequest : Boolean,beforeRequest : Function,\n                 afterRquest,onSuccess : Function,onFail : Function){\n        this.callFunctionOnWebService('regiesterNewUser',functionParams,false,beforeRequest,afterRquest,\n            onSuccess,onFail);\n    }\n\n    isUserLogged(isGetRequest : Boolean,beforeRequest : Function,\n                 afterRquest,onSuccess : Function,onFail : Function) {\n        this.storage.get('SID').then((SID)=>{\n            this.storage.get('userID').then((userID)=>{\n                let functionParams = {user_id : userID,session_token:SID};\n                this.callFunctionOnWebService('isLogged',functionParams,false,beforeRequest,afterRquest,\n                    onSuccess,onFail);\n            }).catch((err)=>{\n                onFail();\n            });\n        }).catch((err)=>{\n            onFail();\n        });\n    }\n\n    loginWithUserNameAndPasword(functionParams : object,isGetRequest : Boolean,beforeRequest : Function,\n                 afterRquest,onSuccess : Function,onFail : Function){\n        this.uniqueDeviceID.get().then((uuid)=>{\n            functionParams['device_ip'] = uuid;\n            this.callFunctionOnWebService('loginWithUsernamePassword',functionParams,false,beforeRequest,afterRquest,\n                onSuccess,onFail);\n        }).catch((err)=>{\n            onFail();\n        });\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/WebService/WebService.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/*\n  Generated class for the AuthenticationProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class AuthenticationProvider {\n\n  constructor(private storage: Storage) {\n\n  }\n\n  authenticateUser(userAuthentiaction){\n    if(userAuthentiaction['code'] != '301'){\n      console.log('USER ID ' + userAuthentiaction['user_id']);\n      this.storage.set('userID',userAuthentiaction['user_id']);\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n    authorizeUser(userAuthorization){\n        if(userAuthorization['code'] == '4000'){\n            return -1; //Means user has been blocked\n        }else if(userAuthorization['code'] == '3000'){\n            return 0; //Means user has been logged out from system and should re-login\n        }else{\n            return 1;//Means user still exist logged in system and can use app services\n        }\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/authentication/authentication.ts","import { Injectable } from '@angular/core';\n\n/*\n  Generated class for the ValidatorProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class ValidatorProvider {\n\n  constructor() {\n  }\n\n\n\n    validateConfrimCode(confirmCode : string){\n        if(confirmCode.length == 6){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n  validatePhoneNumber(phoneNumber : string){\n    if(phoneNumber.length >= 8){\n        return true;\n    }else{\n      return false;\n    }\n  }\n\n    validateName(name : string){\n        if(name.length >= 4){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    validateMail(mail : string){\n        var regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        return regexp.test(mail);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/validator/validator.ts"],"sourceRoot":""}